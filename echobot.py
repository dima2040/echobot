import logging
import asyncio
import os

from aiogram import Bot, Dispatcher,  types 
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import CommandStart, Command
from dotenv import load_dotenv

load_dotenv()

api_token = os.environ.get("ECHOBOT_API_TOKEN")

logging.basicConfig(level=logging.INFO)

bot = Bot(token=api_token)
dp = Dispatcher()

def make_keyboard():
    """
    O–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é make_keyboard, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞–µ—Ç —Ä–∞–∑–º–µ—Ç–∫—É
    –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º.
    """
    markup = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–æ–¥ –±–æ—Ç–∞", url="https://github.com/dima2040/tgbot"),]
        ]
    )
    return markup

def make_replaykeyboard():
    """
    O–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞–µ—Ç —Ä–∞–∑–º–µ—Ç–∫—É
    –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å —á–µ—Ç—ã—Ä—å–º—è –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –¥–≤–µ —Å—Ç—Ä–æ—á–∫—É –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞.
    """
    markup = ReplyKeyboardMarkup( 
        keyboard=[
            [
                KeyboardButton(text="–∫–Ω–æ–ø–∫–∞ 1_1"), 
                KeyboardButton(text="–∫–Ω–æ–ø–∫–∞ 1_2")
            ]
        ]
    )
    return markup


def make_many_buttons_replaykeyboard():
    """
    O–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞–µ—Ç —Ä–∞–∑–º–µ—Ç–∫—É
    –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Ä—è–¥–∞–º–∏ –ø–æ 12 –∫–Ω–æ–ø–æ–∫.
    """
    markup = ReplyKeyboardMarkup( 
        keyboard=[
            [
                KeyboardButton(text="üüß") for _ in range(12)
            ],
            [
                KeyboardButton(text="üü•") for _ in range(12)
            ],
            [
                KeyboardButton(text="üü™") for _ in range(12)
            ],
            [
                KeyboardButton(text="üü©") for _ in range(12)
            ],
        ]
    )
    return markup


@dp.message(CommandStart())
async def send_welcome(message: types.Message):
     """–ü–æ—Å—ã–ª–∞–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
     await message.reply("‚úåÔ∏è –ü—Ä–∏–≤–µ—Ç —ç—Ç–æ echobot!", reply_markup=make_keyboard())

@dp.message(Command("help"))
async def send_help(message: types.Message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–∫–∏"""
    help_message = """
    üìù –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–∫–∏ echobot. –í–æ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n
    /start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n
    /buttons - –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä –∫–Ω–æ–ø–æ–∫ \n
    /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–∫–∏\n
    *** - –õ—é–±–∞—è –¥—Ä—É–≥–∞—è —Ñ–∞—Ä–∞–∑–∞ –∏–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –æ—Ç–≤–µ—Ç –≤ —Ç–æ–º –∂–µ –≤–∏–¥–µ 
    """
    await message.reply(help_message, reply_markup=make_replaykeyboard())

@dp.message(Command("buttons"))
async def send_help(message: types.Message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º"""
    await message.reply("üí™–ú–Ω–æ–≥–æ –∫–Ω–æ–ø–æ–∫!", reply_markup=make_many_buttons_replaykeyboard())


@dp.message()
async def echo_handler(message: types.message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–ø–∏—é –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ç–æ—Ç –∂–µ —á–∞—Ç."""
    await message.send_copy(chat_id=message.chat.id)


async def main():
    """–ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ–ø—Ä–æ—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—Ç Telegram-–±–æ—Ç–∞ —Å –ø–æ–º–æ—â—å—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ aiogram."""
    await dp.start_polling(bot, skip_updates=True)


if __name__ == '__main__':
    asyncio.run(main())
